# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
- job: RunTestScript
  steps:
  - script: echo Hello, world!
- job: BuildAndPublish
  #variables:
  #- name: arch
  #  value: avr
  container:
    image: cscotest.azurecr.io/mabuild:latest
    endpoint: CSCOTest
  steps:
  - task: CMake@1
    inputs:
      workingDirectory: build
      cmakeArgs: ../
  - task: CMake@1
    inputs:
      cmakeArgs: '--build .'
  - script: |
      tar -zcvf $(Build.ArtifactStagingDirectory)/AVRCommon build/main.hex
      md5sum $(Build.ArtifactStagingDirectory)/AVRCommon | cut -d ' ' -f 1 > $(Build.ArtifactStagingDirectory)/AVRCommon.md5
  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '477fc493-2c12-4877-954a-3040372f2485/40809f3d-1cfb-45c7-b7e3-589968369bc9'
      vstsFeedPackagePublish: 'avr-common'
      versionOption: 'custom'
      versionPublish: '1.0.0'
      packagePublishDescription: 'compressed hex output'
#  - task: UniversalPackages@0
#    inputs:
#      command: 'publish'
#      publishDirectory: '$(Build.ArtifactStagingDirectory)/avr'
#      feedsToUsePublish: 'internal'
#      vstsFeedPublish: '477fc493-2c12-4877-954a-3040372f2485/40809f3d-1cfb-45c7-b7e3-589968369bc9'
#      #vstsFeedPublish: 'TestArtifacts'
#      vstsFeedPackagePublish: 'AVRCommon'
#      versionOption: 'custom'
#      versionPublish: '1.0.0'
#      packagePublishDescription: 'hex file output'