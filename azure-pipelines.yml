# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

jobs:
- job: AVR
  variables:
    - name: artver
      value: ''
  container:
    image: cscotest.azurecr.io/mabuild:latest
    endpoint: CSCOTest
  steps:
  - bash: |
      ARTVER=$(git describe)
      echo "##vso[task.setvariable variable=artver]$ARTVER"
      echo $ARTVER
    name: SetVar
  - task: CMake@1
    inputs:
      workingDirectory: build
      cmakeArgs: ../
  - task: CMake@1
    inputs:
      cmakeArgs: '--build .'
  - bash: |
      mkdir $(Build.BinariesDirectory)/avr
      tar -zcvf $(Build.BinariesDirectory)/avr/AVRCommon build/main.hex
      md5sum $(Build.BinariesDirectory)/avr/AVRCommon | cut -d ' ' -f 1 > $(Build.BinariesDirectory)/avr/AVRCommon.md5
    name: Package
  - bash: |
      echo 'Version: '$(artver)
    name: CheckVar
  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.BinariesDirectory)/avr'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '477fc493-2c12-4877-954a-3040372f2485/40809f3d-1cfb-45c7-b7e3-589968369bc9'
      vstsFeedPackagePublish: 'avr-common'
      versionOption: 'custom'
      versionPublish: '$(artver)'
      packagePublishDescription: 'test output'