# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

jobs:
  # set package variable once, use in all jobs
- job: GetVersion
  steps:
      # isOutput to pass to other job, ${X:1} to trim 'v' character from git output
  - bash: |
      ARTVER=$(git describe)
      echo "##vso[task.setvariable variable=artver;isOutput=true]${ARTVER:1}"
    name: SetVar
- job: BuildAndPublish
  dependsOn: GetVersion
  variables:
           #$[ dependencies.{job-name}.outputs['{step}.{var}']]
    artver: $[ dependencies.GetVersion.outputs['SetVar.artver']]
  container:
    image: cscotest.azurecr.io/mabuild:latest
    endpoint: CSCOTest
  steps:
  - checkout: self
    lfs: true
  - task: CMake@1
    inputs:
      workingDirectory: build
      cmakeArgs: ../
  - task: CMake@1
    inputs:
      cmakeArgs: '--build .'
  - template: templates/package.yml
    parameters:
      filename: AVRCommon
      verstring: $(artver)
      filelist: build/main.hex binaries/garbage.bin
      package: avr-common
      description: 'test output'