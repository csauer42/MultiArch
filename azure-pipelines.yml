# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

jobs:
  # set package variable once, use in all jobs
- job: GetVersion
  steps:
      # isOutput to pass to other job, ${X:1} to trim 'v' character from git output
  - bash: |
      ARTVER=$(git describe)
      echo "##vso[task.setvariable variable=artver;isOutput=true]${ARTVER:1}"
    name: SetVar
- job: BuildAndPublish
  dependsOn: GetVersion
  variables:
           #$[ dependencies.{job-name}.outputs['{step}.{var}']]
    artver: $[ dependencies.GetVersion.outputs['SetVar.artver']]
  container:
    image: cscotest.azurecr.io/mabuild:latest
    endpoint: CSCOTest
  steps:
  - checkout: self
    lfs: true
  - task: CMake@1
    inputs:
      workingDirectory: build
      cmakeArgs: ../
  - task: CMake@1
    inputs:
      cmakeArgs: '--build .'
  - template: templates/package.yml
    parameters:
      filename: AVRCommon
      verstring: $(artver)
      filelist: build/main.hex binaries/garbage.bin
      package: avr-common
      description: 'test output'

#  - bash: |
#      mkdir $(Build.BinariesDirectory)/avr
#      tar -zcvf $(Build.BinariesDirectory)/avr/AVRCommon_$(artver) build/main.hex binaries/garbage.bin
#      md5sum $(Build.BinariesDirectory)/avr/AVRCommon_$(artver) | cut -d ' ' -f 1 > $(Build.BinariesDirectory)/avr/AVRCommon_$(artver).md5
#      md5sum binaries/garbage.bin
#      ls -lah binaries/garbage.bin
#    name: Package
#  - bash: |
#      echo 'Version: '$(artver)
#    name: CheckVar
  # - task: UniversalPackages@0
  #   inputs:
  #     command: 'publish'
  #     publishDirectory: '$(Build.BinariesDirectory)/avr'
  #     feedsToUsePublish: 'internal'
  #     vstsFeedPublish: '477fc493-2c12-4877-954a-3040372f2485/40809f3d-1cfb-45c7-b7e3-589968369bc9'
  #     vstsFeedPackagePublish: 'avr-common'
  #     versionOption: 'custom'
  #     versionPublish: '$(artver)'
  #     packagePublishDescription: 'test output'